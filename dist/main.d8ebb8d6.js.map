{"version":3,"sources":["scripts/localStorage.js","scripts/additionalFunctions.js","scripts/loadTasks.js","scripts/time.js","scripts/eventHandlers.js","scripts/modal.js","scripts/cardTransfer.js","scripts/drag&drop.js","scripts/hideCategories.js","scripts/deleteAllCompleted.js","scripts/main.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["setDate","data","localStorage","setItem","JSON","stringify","getDate","parse","getItem","_main","require","getUsers","fetch","then","response","json","users","selector","document","querySelector","firstChild","remove","defaultOption","createElement","value","textContent","appendChild","forEach","user","option","id","name","updateDeleteButtonVisibility","completedContainer","children","length","deleteAll","style","display","addWhiteLine","todoContainer","classList","add","_localStorage","_additionalFunctions","loadTasks","tasks","innerHTML","progressContainer","task","status","createCard","updateCounts","todoCountLength","progressCountLength","completedCountLength","todoCount","getElementById","progressCount","completedCount","_ref","title","description","time","userName","concat","showTime","date","Date","timeString","toLocaleTimeString","hour","minute","innerText","setTimeout","_loadTasks","_time","addWindowEventListeners","window","addEventListener","createTaskModal","taskModal","setAttribute","body","prepend","modalReset","modalTitle","border","modalDescription","modalUser","validateInput","trim","taskModalConfirm","editingCard","valueTitle","valueDescription","valueUser","options","selectedIndex","text","taskToUpdate","find","Number","dataset","userID","now","push","modal","createModal","warningText","cancelFunction","confirmFunction","colorCategory","confirmModal","className","event","target","_modal","moveToTodo","card","currentTitle","getElementsByClassName","currentDescription","currentTime","currentUser","moveToInProgress","toProgressWhatever","moveToCompleted","_cardTransfer","draggedCardId","addEventListenerForDragAndDrop","e","preventDefault","dropTargetId","closest","contains","hideTodo","cardContainer","categoryButton","todo","toggle","hideProgress","progress","hideCompleted","completed","deleteAllCompleted","updatedTasks","filter","_eventHandlers","_dragDrop","_hideCategories","_deleteAllCompleted","exports","cancelModal","taskConfirm","todoHeader","progressHeader","completedHeader","i","parentElement","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","type","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","stackTrace","getParents","modules","parents","k","d","dep","Array","isArray","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"main.d8ebb8d6.js","sourceRoot":"..\\src","sourcesContent":["// Модуль с функциями для работы с localStorage\n\n// Функции для работы с localStorage: сохранение и получение данных\nexport function setDate(data) { // Сразу экспортируем функцию\n    localStorage.setItem('tasks', JSON.stringify(data)); // Сохраняем данные в localStorage с ключом 'tasks', предварительно преобразовав их в формат JSON\n}\nexport function getDate() { // Сразу экспортируем функцию\n    return JSON.parse(localStorage.getItem('tasks')); // Получаем данные из localStorage с ключом 'tasks' и преобразуем их из формата JSON в JavaScript-объект\n}","// Модуль с дополнительными функциями\n\n// Импортируем сторонние модули\nimport {todoContainer, completedContainer, deleteAll} from './main.js';\n\n// Функция для получения списка пользователей с API \nexport function getUsers () {\n    fetch('https://jsonplaceholder.typicode.com/users') // Отправляем запрос на API для получения списка пользователей\n    .then(response => response.json()) // Преобразуем ответ сервера в JSON формат\n    .then(users => { // Обрабатываем полученный список пользователей\n      const selector = document.querySelector('.modal__selector'); // Находим селектор (список выбора) в DOM по классу 'modal__selector'\n      while (selector.firstChild) { // Удаляем все текущие опции из селектора\n        selector.firstChild.remove();\n      }\n  \n      // Создаем статическую опцию \"Select user\" и добавляем её в селектор\n      const defaultOption = document.createElement('option');\n      defaultOption.value = 0;\n      defaultOption.textContent = 'Select user';\n      selector.appendChild(defaultOption);\n  \n      users.forEach(user => { // Для каждого пользователя создаем новую опцию в селекторе\n        const option = document.createElement('option');\n        option.value = user.id; // Устанавливаем значение опции как id пользователя\n        option.textContent = user.name; // Устанавливаем текст опции как имя пользователя\n        selector.appendChild(option); // Добавляем опцию в селектор\n      });\n    });\n}\n\n// Функция для обновления видимости кнопки \"Удалить все\" в зависимости от наличия завершенных задач\nexport function updateDeleteButtonVisibility() { \n    if (completedContainer.children.length === 0) { // Если в completedContainer нету карточек, скрываем кнопку deleteAll\n      deleteAll.style.display = 'none';\n    } else {\n      deleteAll.style.display = '';\n    }\n}\n\n// Функция для добавления белой линии в пустой контейнер TODO\nexport function addWhiteLine() { \n    if (todoContainer.children.length == 0) { // Проверяем, есть ли карточки в контейнере TODO\n      todoContainer.classList.add(\"white-line\"); // Если карточек нет, добавляем класс 'white-line' к контейнеру\n    } else {\n      todoContainer.classList.remove(\"white-line\"); // Если карточки есть, удаляем класс 'white-line' из контейнера\n    }\n}\n  ","// Модуль с функциями загрузки и обновления списка задач\n\n// Импортируем сторонние модули\nimport {todoContainer, progressContainer, completedContainer} from './main.js'\nimport {getDate} from './localStorage.js';\nimport {updateDeleteButtonVisibility, addWhiteLine} from './additionalFunctions.js';\n\n// Функция для загрузки задач из localStorage и отображения их на странице\nexport function loadTasks() { \n    const tasks = getDate(); // Получаем текущий список задач из localStorage\n    // Очищаем контейнеры карточек перед добавлением новых\n    todoContainer.innerHTML = '';\n    progressContainer.innerHTML = '';\n    completedContainer.innerHTML = '';\n  \n    tasks.forEach(task => { // Перебираем каждую задачу в списке\n      if (task.status === 'todo') {\n        todoContainer.innerHTML += createCard('todo', task); // Добавляем карточку в контейнер TODO\n      } else if (task.status === 'progress') {\n        progressContainer.innerHTML += createCard('progress', task); // Добавляем карточку в контейнер PROGRESS\n      } else if (task.status === 'completed') {\n        completedContainer.innerHTML += createCard('completed', task);  // Добавляем карточку в контейнер COMPLETED\n      }\n    });\n    updateCounts(); // Обновляем счетчики задач\n    // Обновляем видимость кнопки удаления всех карточек\n    updateDeleteButtonVisibility();\n}\n\n// Функция для обновления счетчиков задач в категориях\nexport function updateCounts() { \n    // Получаем количество всех задач\n    const todoCountLength = todoContainer.children.length;\n    const progressCountLength = progressContainer.children.length;\n    const completedCountLength = completedContainer.children.length;\n    // Получаем текстовые поля счётчиков\n    const todoCount = document.getElementById('todo__count');\n    const progressCount = document.getElementById('progress__count');\n    const completedCount = document.getElementById('completed__count');\n    // Устанавливаем нужные счётчики\n    todoCount.textContent = todoCountLength;\n    progressCount.textContent = progressCountLength;\n    completedCount.textContent = completedCountLength;\n    // Проверяем содержимое контейнера TODO для отрисовки белой линии\n    addWhiteLine()\n}\n\nfunction createCard(status, { id, title, description, time, userName }) { // Функция для создания HTML-кода карточки задачи (используем деструктуризацию)\n  return `\n    <div class=\"card ${status}__card\" data-id=\"${id}\" draggable=\"true\">\n      <div class=\"card__buttons\">\n        ${status === 'todo' ? // Если статус 'todo', добавляем кнопки Edit, Delete, Start \n          `\n            <button class=\"card__edit todo__button\">Edit</button>\n            <button class=\"card__delete todo__button\">Delete</button>\n            <button class=\"card__forward todo__button\">Start</button>\n          ` :\n          status === 'progress' ? // Если статус 'progress', добавляем кнопки Back, Complete \n          `\n            <button class=\"card__back progress__button\">Back</button>\n            <button class=\"card__forward progress__button\">Complete</button>\n          ` :\n          status === 'completed' ? // Если статус 'completed', добавляем кнопки Back, Delete\n          `\n            <button class=\"card__back completed__button\">Back</button>\n            <button class=\"card__delete completed__button\">Delete</button>\n          ` :\n          '' // Если статус не распознан, не добавляем кнопки\n        }\n      </div>\n      <h3 class=\"card__title\">${title}</h3>\n      <p class=\"card__description\">${description}</p>\n      <div class=\"card__bottom\">\n        <p class=\"card__user\">${userName}</p>\n        <p class=\"card__time\">${time}</p>\n      </div>\n    </div>\n  `;\n}","// Модуль с функцией отображения времени\n\n// Функция отображения текущего времени\nexport function showTime () { \n    // Получаем текущую дату и время\n    const date = new Date();\n    // Преобразуем время в строку\n    const timeString = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    // Помещаем время в элемент с id clock\n    document.getElementById(\"clock\").innerText = timeString;\n    // Запускаем функцию showTime каждую секунду\n    setTimeout(showTime, 1000);\n}","// Модуль с функцией добавления слушателей к объекту window\n\n// Импортируем сторонние модули\nimport {loadTasks} from './loadTasks.js';\nimport {showTime} from './time.js';\n\n // Функция для добавления обработчиков событий к окну (загрузка страницы и изменение localStorage)\nexport function addWindowEventListeners() {\n    window.addEventListener(\"load\", function(){ // Добавляем обработчик события загрузки страницы, который вызывает функцию loadTasks и showtime\n        loadTasks();\n        showTime();\n    });\n    window.addEventListener(\"storage\", function(){ // Добавляем обработчик события на все изменения, для отображения изменений в другой вкладке , который вызывает функцию loadTasks\n        loadTasks();\n    });\n  }","// Модуль с модальными окнами\n\n// Импортируем сторонние модули\nimport {modal, modalTitle, modalDescription, modalUser, todoContainer} from './main.js'\nimport {updateCounts} from './loadTasks.js';\nimport {getDate, setDate} from './localStorage.js';\nimport {getUsers} from './additionalFunctions.js';\n\n// Функция создания модального окна для добавления или редактирования карточки\nexport function createTaskModal () { // Функция создания модального окна для добавления или редактирования карточки\n    const taskModal = document.createElement('div'); // Создаём div для модального окна\n    // Добавляем HTML-структуру модального окна, включая поля ввода, кнопки и селектор\n    taskModal.innerHTML = `<div class=\"modal__content\"> \n    <div class=\"card todo__card modal__card\">\n        <input class=\"modal__title\" placeholder=\"Title\" id=\"modal__title\"></input>\n        <textarea class=\"modal__description\" rows=\"10\" placeholder=\"Description\" id=\"modal__description\"></textarea>\n        <div class=\"modal__bottom\">\n            <select class=\"modal__selector\" name=\"modal__user\" required=\"required\" id=\"modal__user\">\n                <option value=\"0\" selected>Select user</option>\n            </select>\n            <div class=\"card__buttons\">\n                <button class=\"todo__button\" id=\"task__cancel\"\">Cancel</button>\n                <button class=\"todo__button\" id=\"task__confirm\">Confirm</button>\n            </div>\n        </div>\n    </div>\n  </div>`;\n    taskModal.classList.add('modal'); // Добавляем класс 'modal'\n    taskModal.setAttribute('id', 'modal'); // Устанавливаем id 'modal'\n    document.body.prepend(taskModal); // Добавляем модальное окно в начало body\n    getUsers(); // Загружаем список пользователей для селектора\n}\n\n// Функция для обнуления модального окна\nexport function modalReset () {\n    modalTitle.style.border = '1px solid #4e50d3'; // Возвращаем стандартный цвет рамки для названия\n    modalDescription.style.border = '1px solid #4e50d3'; // Возвращаем стандартный цвет рамки для описания\n    modalUser.style.border = '1px solid #4e50d3'; // Возвращаем стандартный цвет рамки для выбора пользователя\n    // Обнуляем все элементы модального окна\n    modalTitle.value = '';\n    modalDescription.value = '';\n    modalUser.value = 0;\n}\n\n// Функция для проверки введённых данных в модальном окне\nexport function validateInput(title, description, user) { \n    if (!title.trim()) { // Проверка названия на наличие непустого значения\n      modalTitle.style.border = '2px solid red'; // Устанавливаем красную рамку для поля ввода названия\n      return false; // Возвращаем false, если название пустое\n    } else {\n      modalTitle.style.border = '1px solid #4e50d3'; // Устанавливаем стандартную рамку, если название не пустое\n    }\n    if (!description.trim()) { // Проверка описания на наличие непустого значения\n      modalDescription.style.border = '2px solid red'; // Устанавливаем красную рамку для поля ввода описания\n      return false; // Возвращаем false, если описание пустое\n    } else {\n      modalDescription.style.border = '1px solid #4e50d3'; // Устанавливаем стандартную рамку, если описание не пустое\n    }\n    if (user == 0) { // Проверка выбора пользователя\n      modalUser.style.border = '2px solid red'; // Устанавливаем красную рамку для селектора пользователя\n      return false; // Возвращаем false, если пользователь не выбран\n    } else {\n      modalUser.style.border = '1px solid #4e50d3'; // Устанавливаем стандартную рамку, если пользователь выбран\n    }\n    return true; // Если все проверки пройдены возвращает true\n}\n\n// Функция для обработки подтверждения в модальном окне (создание или обновление карточки)\nexport function taskModalConfirm (editingCard) {\n    const valueTitle = modalTitle.value; // Получаем значение из поля ввода названия\n    const valueDescription = modalDescription.value; // Получаем значение из поля ввода описания\n    const valueUser = modalUser.value; // Получаем значение из поля выбора пользователя (ID)\n    // Вызов функции проверки на наличие введённых значений\n    if (!validateInput(valueTitle, valueDescription, valueUser)) {\n      return; // Останавливаем выполнение, если проверка не пройдена\n    }\n    const tasks = getDate(); // Получаем текущий список задач из localStorage\n    if (editingCard) { // Проверяем, есть ли карточка в режиме редактирования\n      // Обновляем текстовое содержимое элементов карточки с новыми значениями из модального окна\n      editingCard.querySelector('.card__title').textContent = modalTitle.value;\n      editingCard.querySelector('.card__description').textContent = modalDescription.value;\n      editingCard.querySelector('.card__user').textContent = modalUser.options[modalUser.selectedIndex].text;\n      // Получаем текущий список задач из localStorage\n      const tasks = getDate();\n      // Находим задачу, которую нужно обновить, по id карточки\n      const taskToUpdate = tasks.find(task => task.id === Number(editingCard.dataset.id));\n      if (taskToUpdate) { // Проверяем, нашли ли мы задачу\n        // Обновляем свойства задачи с новыми значениями из модального окна\n        taskToUpdate.title = modalTitle.value;\n        taskToUpdate.description = modalDescription.value;\n        taskToUpdate.userID = modalUser.value;\n        taskToUpdate.userName = modalUser.options[modalUser.selectedIndex].text;\n        setDate(tasks);\n      }\n      // Обновляем ID карточки\n      editingCard.dataset.id = taskToUpdate.id;\n    } else {\n      const date = new Date(); // Получаем текущее время\n      const timeString = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); // Преобразуем время в строку\n      const id = Date.now(); // Генерируем уникальный идентификатор для задачи, используя текущее время в миллисекундах\n      const userName = modalUser.options[modalUser.selectedIndex].text; // Забираем имя пользователя\n      // Добавляем новую карточку в контейнер\n      todoContainer.innerHTML += `<div class=\"card todo__card\" data-id=\"${id}\" draggable=\"true\">\n                                    <div class=\"card__buttons\">\n                                      <button class=\"card__edit todo__button\">Edit</button>\n                                      <button class=\"card__delete todo__button\">Delete</button>\n                                      <button class=\"card__forward todo__button\">Start</button>\n                                    </div>\n                                    <h3 class=\"card__title\">${valueTitle}</h3>\n                                    <p class=\"card__description\">${valueDescription}</p>\n                                    <div class=\"card__bottom\">\n                                      <p class=\"card__user\">${userName}</p>\n                                      <p class=\"card__time\">${timeString}</p>\n                                    </div>\n                                  </div>`;\n      tasks.push({ // Добавляем данные новой задачи в массив\n          id: id, // Устанавливаем идентификатор задачи\n          time: timeString, // Устанавливаем время создания задачи\n          title: valueTitle, // Устанавливаем название задачи\n          description: valueDescription, // Устанавливаем описание задачи\n          userID: modalUser.value, // Устанавливаем ответственного за задачу пользователя\n          userName: modalUser.options[modalUser.selectedIndex].text,\n          status: 'todo' // Устанавливаем статус задачи\n      });\n      setDate(tasks); // Сохраняем обновленный список задач в localStorage\n    }\n    // Закрываем модальное окно\n    modal.style.display = \"none\";\n    // Сбрасываем ссылку на редактируемую карточку\n    editingCard = null; \n    // Обнуляем модальное окно\n    modalReset();\n    // Обновляем счётчики\n    updateCounts();\n}\n\n// Функция для создания модального окна подтверждения\nexport function createModal(warningText, cancelFunction, confirmFunction, colorCategory) {\n    // Создаем div-элемент для модального окна\n    const confirmModal = document.createElement('div');\n    // Устанавливаем id и class модального окна для удобства обращения\n    confirmModal.id = 'confirmModal';\n    confirmModal.className = 'modalConfirm';\n    // Устанавливаем HTML-содержимое модального окна\n    confirmModal.innerHTML = `\n      <div class=\"modalConfirm__content\">\n        <div class=\"modalConfirm__container${colorCategory}\">\n          <p class=\"modalConfirm__warning\">${warningText}</p>\n          <div class=\"modalConfirm__bottom\">\n            <button id=\"modalConfirm__cancel\" class=\"modalConfirm__button${colorCategory} cancel\">Cancel</button>\n            <button id=\"modalConfirm__confirm\" class=\"modalConfirm__button${colorCategory}\">Confirm</button>\n          </div>\n        </div>\n      </div>`;\n    // Показываем модальное окно подтверждения\n    confirmModal.style.display = 'block';\n    // Добавляем модальное окно в конец body\n    document.body.appendChild(confirmModal);\n    // Добавляем обработчики событий для кнопок \"Confirm\" и \"Cancel\"\n    document.getElementById('modalConfirm__confirm').addEventListener('click', confirmFunction);\n    document.getElementById('modalConfirm__cancel').addEventListener('click', cancelFunction);\n    // Обработчик события клика для закрытия модального окна при клике вне его области\n    document.addEventListener('click', (event) => {\n      if (event.target == confirmModal) {\n        confirmModal.remove();\n      }\n    })\n  }","// Модуль с функциями для перетаскивания карточек между разделами\n\n// Импортируем сторонние модули\nimport {todoContainer, progressContainer, completedContainer} from './main.js'\nimport {updateCounts} from './loadTasks.js';\nimport {getDate, setDate} from './localStorage.js';\nimport {updateDeleteButtonVisibility} from './additionalFunctions.js';\nimport {createModal} from './modal.js';\n\nexport function moveToTodo(card) { // Функция перемещения карточки в ToDo\n    // Получаем ссылки на поля карточки и id\n    const currentTitle = card.getElementsByClassName('card__title')[0].innerHTML;\n    const currentDescription = card.getElementsByClassName('card__description')[0].innerHTML;\n    const currentTime = card.getElementsByClassName('card__time')[0].innerHTML;\n    const currentUser = card.getElementsByClassName('card__user')[0].innerHTML;\n    const id = Number(card.dataset.id);\n    // Создаём такую же карточку в новом разделе\n    todoContainer.innerHTML += `<div class=\"card todo__card\" data-id=\"${id}\" draggable=\"true\">\n                                  <div class=\"card__buttons\">\n                                    <button class=\"card__edit todo__button\">Edit</button>\n                                    <button class=\"card__delete todo__button\">Delete</button>\n                                    <button class=\"card__forward todo__button\">Start</button>\n                                  </div>\n                                  <h3 class=\"card__title\">${currentTitle}</h3>\n                                  <p class=\"card__description\">${currentDescription}</p>\n                                  <div class=\"card__bottom\">\n                                    <p class=\"card__user\">${currentUser}</p>\n                                    <p class=\"card__time\">${currentTime}</p>\n                                  </div>\n                                </div>`;\n    // Удаляем старую карточку\n    card.remove(card);\n    // Получаем текущие задачи из Local Storage\n    const tasks = getDate();\n    // Находим задачу, которую нужно обновить\n    const taskToUpdate = tasks.find(task => task.id === id);\n    // Обновляем поле 'status'\n    taskToUpdate.status = 'todo';\n    // Обновляем Local Storage с новым массивом задач\n    setDate(tasks);\n    // Обновляем счётчики\n    updateCounts();\n    // Обновляем видимость кнопки удаления всех карточек\n    updateDeleteButtonVisibility();\n  };\n  \n  export function moveToInProgress(card) { // Функция перемещения карточки в In Progress\n    const cancelFunction = () => { // Функция для отмены в модальном окне\n      confirmModal.remove(); // Закрываем модальное окно\n    };\n    const confirmFunction = () => { // Функция для подтверждения в модальном окне\n      confirmModal.remove(); // Закрываем модальное окно\n      toProgressWhatever(); // Перемещаем карточку, если подтвердили превышение лимита\n    }\n    if (progressContainer.children.length > 5) { // Если в активных задачах уже 6 задач\n      // Создаем модальное окно с подтверждением\n      createModal('You have accumulated unfulfilled tasks. Are you sure you want to add another task?', cancelFunction, confirmFunction, 'Progress');\n    } else {\n      toProgressWhatever() // Перемещаем карточку если лимита нету\n    }\n    function toProgressWhatever() { // Функция для продолжения перемещения в колонку In Progress\n      // Получаем ссылки на поля карточки и id\n      const currentTitle = card.getElementsByClassName('card__title')[0].innerHTML;\n      const currentDescription = card.getElementsByClassName('card__description')[0].innerHTML;\n      const currentTime = card.getElementsByClassName('card__time')[0].innerHTML;\n      const currentUser = card.getElementsByClassName('card__user')[0].innerHTML;\n      const id = Number(card.dataset.id);\n      // Создаём такую же карточку в новом разделе\n      progressContainer.innerHTML += `<div class=\"card progress__card\" data-id=\"${id}\" draggable=\"true\">\n                                        <div class=\"card__buttons\">\n                                          <button class=\"card__back progress__button\">Back</button>\n                                          <button class=\"card__forward progress__button\">Complete</button>\n                                        </div>\n                                        <h3 class=\"card__title\">${currentTitle}</h3>\n                                        <p class=\"card__description\">${currentDescription}</p>\n                                        <div class=\"card__bottom\">\n                                          <p class=\"card__user\">${currentUser}</p>\n                                          <p class=\"card__time\">${currentTime}</p>\n                                        </div>\n                                      </div>`;\n      // Удаляем старую карточку\n      card.remove(card);\n      // Получаем текущие задачи из Local Storage\n      const tasks = getDate();\n      // Находим задачу, которую нужно обновить\n      const taskToUpdate = tasks.find(task => task.id === id);\n      // Обновляем поле 'status'\n      taskToUpdate.status = 'progress';\n      // Обновляем Local Storage с новым массивом задач\n      setDate(tasks);\n      // Обновляем счётчики\n      updateCounts();\n      // Обновляем видимость кнопки удаления всех карточек\n      updateDeleteButtonVisibility();\n    }\n  }\n  export function moveToCompleted(card) { // Функция перемещения карточки в Completed\n    // Получаем ссылки на поля карточки и id\n    const currentTitle = card.getElementsByClassName('card__title')[0].innerHTML;\n    const currentDescription = card.getElementsByClassName('card__description')[0].innerHTML;\n    const currentTime = card.getElementsByClassName('card__time')[0].innerHTML;\n    const currentUser = card.getElementsByClassName('card__user')[0].innerHTML;\n    const id = Number(card.dataset.id);\n    // Создаём такую же карточку в новом разделе\n    completedContainer.innerHTML += `<div class=\"card completed__card\" data-id=\"${id}\" draggable=\"true\">\n                                      <div class=\"card__buttons\">\n                                        <button class=\"card__back completed__button\">Back</button>\n                                        <button class=\"card__delete completed__button\">Delete</button>\n                                      </div>\n                                      <h3 class=\"card__title\">${currentTitle}</h3>\n                                      <p class=\"card__description\">${currentDescription}</p>\n                                      <div class=\"card__bottom\">\n                                        <p class=\"card__user\">${currentUser}</p>\n                                        <p class=\"card__time\">${currentTime}</p>\n                                      </div>\n                                    </div>`;\n    // Удаляем старую карточку\n    card.remove(card);\n    // Получаем текущие задачи из Local Storage\n    const tasks = getDate();\n    // Находим задачу, которую нужно обновить\n    const taskToUpdate = tasks.find(task => task.id === id);\n    // Обновляем поле 'status'\n    taskToUpdate.status = 'completed';\n    // Обновляем Local Storage с новым массивом задач\n    setDate(tasks);\n    // Обновляем счётчики\n    updateCounts();\n    // Обновляем видимость кнопки удаления всех карточек\n    updateDeleteButtonVisibility();\n  };","// Модуль с функциями для работы Drag&Drop\n\n// Импортируем сторонние модули\nimport {moveToTodo, moveToInProgress, moveToCompleted} from './cardTransfer.js';\n\nlet draggedCardId = null\n// Функции для добавления обработчиков событий на Drag&Drop\nexport function addEventListenerForDragAndDrop() {\n    // Добавляем обработчики событий для drag and drop\n    document.addEventListener('dragstart', (e) => {\n      // Сохраняем id перетаскиваемой карточки\n      draggedCardId = e.target.dataset.id;\n      // Добавляем класс 'dragging' для визуального эффекта\n      e.target.classList.add('dragging');\n    });\n  \n    document.addEventListener('dragover', (e) => { // Обработчик события перетаскивания над элементом\n      // Разрешаем drop, чтобы можно было поместить карточку в это место\n      e.preventDefault();\n    });\n  \n    document.addEventListener('drop', (e) => { // Обработчик события отпускания карточки\n      // Получаем id контейнера, в который была перемещена карточка\n      const dropTargetId = e.target.closest('.card__container').id;\n      // Получаем ссылку на перетаскиваемую карточку по её id\n      const card = document.querySelector(`[data-id=\"${draggedCardId}\"]`);\n  \n      // Проверяем, куда была перемещена карточка, и вызываем соответствующую функцию перемещения\n      if (dropTargetId === 'todo__container' && !card.classList.contains('todo__card')) { // Дополнительно проверяем, чтобы нельзя было поместить карточку в изначальный раздел\n        moveToTodo(card);\n      } else if (dropTargetId === 'progress__container' && !card.classList.contains('progress__card')) {\n        moveToInProgress(card);\n      } else if (dropTargetId === 'completed__container' && !card.classList.contains('completed__card')) {\n        moveToCompleted(card);\n      }\n  \n      // Удаляем класс 'dragging', чтобы вернуть карточке исходный вид\n      card.classList.remove('dragging');\n    });\n  \n    document.addEventListener('dragend', (e) => {\n      // Удаляем класс 'dragging', чтобы вернуть карточке исходный вид\n      e.target.classList.remove('dragging');\n    });\n  }","// Модуль с функциями для схлопывания кнопок\n\n// Функции для схлопывания кнопок\nexport function hideTodo () {\n  // Получаем элементы, которые нужно скрыть\n  const cardContainer = document.body.getElementsByClassName('card__container')[0];\n  const categoryButton = document.body.getElementsByClassName('category__button')[0];\n  const todo = document.body.querySelector('.todo');\n  // Скрываем или показываем элементы\n  cardContainer.classList.toggle(\"hidden\");\n  categoryButton.classList.toggle(\"hidden\");\n  todo.classList.toggle(\"collapsed\");\n}\nexport function hideProgress () {\n  // Получаем элементы, которые нужно скрыть\n  const cardContainer = document.body.getElementsByClassName('card__container')[1];\n  const progress = document.body.querySelector('.progress');\n  // Скрываем или показываем элементы\n  cardContainer.classList.toggle(\"hidden\");\n  progress.classList.toggle(\"collapsed\");\n}\nexport function hideCompleted () {\n  // Получаем элементы, которые нужно скрыть\n  const cardContainer = document.body.getElementsByClassName('card__container')[2];\n  const categoryButton = document.body.getElementsByClassName('category__button')[1];\n  const completed = document.body.querySelector('.completed');\n  // Скрываем или показываем элементы\n  cardContainer.classList.toggle(\"hidden\");\n  categoryButton.classList.toggle(\"hidden\");\n  completed.classList.toggle(\"collapsed\");\n}","// Модуль с функцией удаления всех завершённых задач\n\n// Импортируем сторонние модули\nimport {completedContainer} from './main.js'\nimport {updateCounts} from './loadTasks.js';\nimport {getDate, setDate} from './localStorage.js';\nimport {updateDeleteButtonVisibility} from './additionalFunctions.js';\nimport {createModal} from './modal.js';\n\n// Функция для удаления всех завершенных задач\nexport function deleteAllCompleted () {\n    createModal(\n      'Are you sure you want to delete all completed tasks?', // Текст предупреждения в модальном окне\n      () => { // Функция, выполняемая при нажатии кнопки \"Cancel\"\n        // Скрываем модальное окно подтверждения без удаления задач\n        confirmModal.remove();\n      },\n      () => { // Функция, выполняемая при нажатии кнопки \"Confirm\"\n        // Получаем текущие задачи из Local Storage\n        const tasks = getDate();\n        // Фильтруем задачи, оставляя только те, у которых статус не 'completed'\n        const updatedTasks = tasks.filter(task => task.status !== 'completed');\n        // Обновляем Local Storage с новым массивом задач (без завершенных)\n        setDate(updatedTasks);\n        // Очищаем содержимое контейнера завершенных задач в DOM\n        completedContainer.innerHTML = '';\n        // Обновляем счетчики задач\n        updateCounts();\n        // Скрываем модальное окно подтверждения\n        confirmModal.remove();\n        // Обновляем видимость кнопки удаления всех карточек\n        updateDeleteButtonVisibility();\n      }, 'Completed' // Цвет категории для оформления модального окна\n    );\n}","// Модуль с основными функциями (инициализация, кнопки, слушатели)\n\n// Импортируем сторонние модули\nimport {updateCounts} from './loadTasks.js';\nimport {getDate, setDate} from './localStorage.js';\nimport {addWindowEventListeners} from './eventHandlers.js';\nimport {createTaskModal, modalReset, taskModalConfirm} from './modal.js';\nimport {addEventListenerForDragAndDrop} from './drag&drop.js';\nimport {moveToTodo, moveToInProgress, moveToCompleted} from './cardTransfer.js';\nimport {hideTodo, hideProgress, hideCompleted} from './hideCategories.js';\nimport {deleteAllCompleted} from './deleteAllCompleted.js';\nimport {updateDeleteButtonVisibility} from './additionalFunctions.js';\n\n// Проверка наличия данных в localStorage и создание пустого массива, если данных нет\nif (!localStorage.getItem('tasks')) {\n  localStorage.setItem('tasks', JSON.stringify([])); // Если его нет, то создаем его с пустым массивом в качестве значения\n}\n\ncreateTaskModal(); // Создаём модальное окно для добавления или редактирования карточки\nexport const modal = document.getElementById(\"modal\");\nexport const cancelModal = document.getElementById(\"task__cancel\");\nexport const taskConfirm = document.getElementById(\"task__confirm\");\n// Получаем заголовки категорий\nexport const todoHeader = document.getElementById('todo__header');\nexport const progressHeader = document.getElementById('progress__header');\nexport const completedHeader = document.getElementById('completed__header');\n// Получаем поля с именем, описанием и исполнителем карточки\nexport const modalTitle = document.getElementById('modal__title');\nexport const modalDescription = document.getElementById('modal__description');\nexport const modalUser = document.getElementById('modal__user');\n// Получаем контейнеры категорий\nexport const todoContainer = document.getElementById('todo__container');\nexport const progressContainer = document.getElementById('progress__container');\nexport const completedContainer = document.getElementById('completed__container');\n// Получаем кнопку удаления всех завершённых задач\nexport const deleteAll = document.getElementById('completed__delete-all');\n\n// Создаём переменную для хранения редактируемой карточки (изначально null)\nlet editingCard = null;\n\naddWindowEventListeners(); // Вызов функции для добавления обработчиков событий к окну\naddEventListenerForDragAndDrop(); // Вызов функции для добавления обработчиков событий на Drag&Drop\n\n// Добавляем слушатель событий на весь документ\ndocument.body.addEventListener('click', function(e) {\n  if (e.target.classList.contains('card__edit')) { // Проверка, кликнули ли по кнопке \"Edit\"\n    modal.style.display = \"block\";  // Показываем модальное окно\n    // Получаем ссылку на редактируемую карточку\n    editingCard = e.target.closest('.card'); // Получаем ссылку на редактируемую карточку\n    let card = e.target.closest('.card');\n    // Заполняем поля модального окна значениями из карточки\n    modalTitle.value = card.querySelector('.card__title').textContent; \n    modalDescription.value = card.querySelector('.card__description').textContent;\n    // Получаем имя пользователя из карточки\n    const userName = card.querySelector('.card__user').textContent;\n    for (let i = 0; i < modalUser.options.length; i++) { // Находим соответствующего пользователя в селекторе модального окна и выбираем его\n      if (modalUser.options[i].text === userName) {\n        modalUser.selectedIndex = i;\n        break; // Выходим из цикла, когда нашли нужного пользователя\n      }\n    }\n  }\n  if (e.target.classList.contains('todo__add')) { // Проверка, кликнули ли по кнопке \"Add todo\"\n    // Удаляем статус редактируемой карточки\n    editingCard = null;\n    // Показываем модальное окно\n    modal.style.display = \"block\";\n  }\n  if (e.target === taskConfirm) { // Проверка, кликнули ли по кнопке \"Confirm\" в модальном окне создания или редактирования карточки\n    // Передаём пустую или редактируемую карточку\n    taskModalConfirm(editingCard);\n  }\n  if (e.target === deleteAll) { // Проверка, кликнули ли по кнопке \"Delete all\" для удаления всех завершённых карточек\n    // Запускаем функцию удаления всех завершённых карточек\n    deleteAllCompleted();\n  }\n  if (e.target === cancelModal) { // Проверка, кликнули ли по кнопке \"Cancel\" в модальном окне создания или редактирования карточки\n    // Закрываем модальное окно\n    modal.style.display = \"none\";\n    // Обнуляем модальное окно\n    modalReset();\n  }\n  if (e.target === modal) { // При нажатии в любом месте за пределами модального окна, оно скрывается\n    modal.style.display = \"none\";\n    // Обнуляем модальное окно\n    modalReset();\n  }\n  if (e.target.closest('.todo__header') === todoHeader) { // Схлопывание колонки ToDo\n    hideTodo();\n  }\n  if (e.target.closest('.progress__header') === progressHeader) { // Схлопывание колонки In Progress\n    hideProgress();\n  }\n  if (e.target.closest('.completed__header') === completedHeader) { // Схлопывание колонки Completed\n    hideCompleted();\n  }\n  if (e.target.classList.contains('card__delete')) { // Проверка, кликнули ли по кнопке \"Delete\" для удаления карточки\n    // Находим карточку, которую нужно удалить\n    const card = e.target.closest('.card');\n    // Получаем id карточки и преобразуем его в число\n    const id = Number(card.dataset.id);\n    // Удаляем карточку из DOM\n    card.remove();\n    // Получаем текущие задачи из Local Storage\n    const tasks = getDate();\n    // Удаляем задачу с соответствующим id из массива задач\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    // Обновляем Local Storage с новым массивом задач\n    setDate(updatedTasks);\n    // Обновляем счётчики\n    updateCounts();\n    // Обновляем видимость кнопки удаления всех карточек\n    updateDeleteButtonVisibility();\n  }\n\n  if (e.target.classList.contains('card__forward')) { // Проверяем, была ли нажата кнопка \"вперед\"\n    const card = e.target.closest('.card');  // Находим карточку, к которой относится кнопка\n    if (card.parentElement === todoContainer) { // Если карточка находится в ToDo\n      moveToInProgress(card); // Перемещаем её в InProgress\n    } else if (card.parentElement === progressContainer) { // Если карточка находится в InProgress\n      moveToCompleted(card); // Перемещаем её в Completed\n    }\n  }\n  if (e.target.classList.contains('card__back')) { // Проверяем, была ли нажата кнопка \"назад\"\n    const card = e.target.closest('.card'); // Находим карточку, к которой относится кнопка\n    if (card.parentElement === progressContainer) { // Если карточка находится в InProgress\n      moveToTodo(card); // Перемещаем её в ToDo\n    } else if (card.parentElement === completedContainer) { // Если карточка находится в Completed\n      moveToInProgress(card); // Перемещаем её в InProgress\n    }\n  }\n});","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}