{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-7e2c9fe22896135b.js","src/scripts/main.js","src/scripts/loadTasks.js","src/scripts/localStorage.js","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","src/scripts/additionalFunctions.js","src/scripts/eventHandlers.js","src/scripts/time.js","src/scripts/modal.js","src/scripts/drag&drop.js","src/scripts/cardTransfer.js","src/scripts/hideCategories.js","src/scripts/deleteAllCompleted.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"5a1bda1ab8fca702\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","// Модуль с основными функциями (инициализация, кнопки, слушатели)\n\n// Импортируем сторонние модули\nimport {updateCounts} from './loadTasks.js';\nimport {getDate, setDate} from './localStorage.js';\nimport {addWindowEventListeners} from './eventHandlers.js';\nimport {createTaskModal, modalReset, taskModalConfirm} from './modal.js';\nimport {addEventListenerForDragAndDrop} from './drag&drop.js';\nimport {moveToTodo, moveToInProgress, moveToCompleted} from './cardTransfer.js';\nimport {hideTodo, hideProgress, hideCompleted} from './hideCategories.js';\nimport {deleteAllCompleted} from './deleteAllCompleted.js';\nimport {updateDeleteButtonVisibility} from './additionalFunctions.js';\n\n// Проверка наличия данных в localStorage и создание пустого массива, если данных нет\nif (!localStorage.getItem('tasks')) {\n  localStorage.setItem('tasks', JSON.stringify([])); // Если его нет, то создаем его с пустым массивом в качестве значения\n}\n\ncreateTaskModal(); // Создаём модальное окно для добавления или редактирования карточки\nexport const modal = document.getElementById(\"modal\");\nexport const cancelModal = document.getElementById(\"task__cancel\");\nexport const taskConfirm = document.getElementById(\"task__confirm\");\n// Получаем заголовки категорий\nexport const todoHeader = document.getElementById('todo__header');\nexport const progressHeader = document.getElementById('progress__header');\nexport const completedHeader = document.getElementById('completed__header');\n// Получаем поля с именем, описанием и исполнителем карточки\nexport const modalTitle = document.getElementById('modal__title');\nexport const modalDescription = document.getElementById('modal__description');\nexport const modalUser = document.getElementById('modal__user');\n// Получаем контейнеры категорий\nexport const todoContainer = document.getElementById('todo__container');\nexport const progressContainer = document.getElementById('progress__container');\nexport const completedContainer = document.getElementById('completed__container');\n// Получаем кнопку удаления всех завершённых задач\nexport const deleteAll = document.getElementById('completed__delete-all');\n\n// Создаём переменную для хранения редактируемой карточки (изначально null)\nlet editingCard = null;\n\naddWindowEventListeners(); // Вызов функции для добавления обработчиков событий к окну\naddEventListenerForDragAndDrop(); // Вызов функции для добавления обработчиков событий на Drag&Drop\n\n// Добавляем слушатель событий на весь документ\ndocument.body.addEventListener('click', function(e) {\n  if (e.target.classList.contains('card__edit')) { // Проверка, кликнули ли по кнопке \"Edit\"\n    modal.style.display = \"block\";  // Показываем модальное окно\n    // Получаем ссылку на редактируемую карточку\n    editingCard = e.target.closest('.card'); // Получаем ссылку на редактируемую карточку\n    let card = e.target.closest('.card');\n    // Заполняем поля модального окна значениями из карточки\n    modalTitle.value = card.querySelector('.card__title').textContent; \n    modalDescription.value = card.querySelector('.card__description').textContent;\n    // Получаем имя пользователя из карточки\n    const userName = card.querySelector('.card__user').textContent;\n    for (let i = 0; i < modalUser.options.length; i++) { // Находим соответствующего пользователя в селекторе модального окна и выбираем его\n      if (modalUser.options[i].text === userName) {\n        modalUser.selectedIndex = i;\n        break; // Выходим из цикла, когда нашли нужного пользователя\n      }\n    }\n  }\n  if (e.target.classList.contains('todo__add')) { // Проверка, кликнули ли по кнопке \"Add todo\"\n    // Удаляем статус редактируемой карточки\n    editingCard = null;\n    // Показываем модальное окно\n    modal.style.display = \"block\";\n  }\n  if (e.target === taskConfirm) { // Проверка, кликнули ли по кнопке \"Confirm\" в модальном окне создания или редактирования карточки\n    // Передаём пустую или редактируемую карточку\n    taskModalConfirm(editingCard);\n  }\n  if (e.target === deleteAll) { // Проверка, кликнули ли по кнопке \"Delete all\" для удаления всех завершённых карточек\n    // Запускаем функцию удаления всех завершённых карточек\n    deleteAllCompleted();\n  }\n  if (e.target === cancelModal) { // Проверка, кликнули ли по кнопке \"Cancel\" в модальном окне создания или редактирования карточки\n    // Закрываем модальное окно\n    modal.style.display = \"none\";\n    // Обнуляем модальное окно\n    modalReset();\n  }\n  if (e.target === modal) { // При нажатии в любом месте за пределами модального окна, оно скрывается\n    modal.style.display = \"none\";\n    // Обнуляем модальное окно\n    modalReset();\n  }\n  if (e.target.closest('.todo__header') === todoHeader) { // Схлопывание колонки ToDo\n    hideTodo();\n  }\n  if (e.target.closest('.progress__header') === progressHeader) { // Схлопывание колонки In Progress\n    hideProgress();\n  }\n  if (e.target.closest('.completed__header') === completedHeader) { // Схлопывание колонки Completed\n    hideCompleted();\n  }\n  if (e.target.classList.contains('card__delete')) { // Проверка, кликнули ли по кнопке \"Delete\" для удаления карточки\n    // Находим карточку, которую нужно удалить\n    const card = e.target.closest('.card');\n    // Получаем id карточки и преобразуем его в число\n    const id = Number(card.dataset.id);\n    // Удаляем карточку из DOM\n    card.remove();\n    // Получаем текущие задачи из Local Storage\n    const tasks = getDate();\n    // Удаляем задачу с соответствующим id из массива задач\n    const updatedTasks = tasks.filter(task => task.id !== id);\n    // Обновляем Local Storage с новым массивом задач\n    setDate(updatedTasks);\n    // Обновляем счётчики\n    updateCounts();\n    // Обновляем видимость кнопки удаления всех карточек\n    updateDeleteButtonVisibility();\n  }\n\n  if (e.target.classList.contains('card__forward')) { // Проверяем, была ли нажата кнопка \"вперед\"\n    const card = e.target.closest('.card');  // Находим карточку, к которой относится кнопка\n    if (card.parentElement === todoContainer) { // Если карточка находится в ToDo\n      moveToInProgress(card); // Перемещаем её в InProgress\n    } else if (card.parentElement === progressContainer) { // Если карточка находится в InProgress\n      moveToCompleted(card); // Перемещаем её в Completed\n    }\n  }\n  if (e.target.classList.contains('card__back')) { // Проверяем, была ли нажата кнопка \"назад\"\n    const card = e.target.closest('.card'); // Находим карточку, к которой относится кнопка\n    if (card.parentElement === progressContainer) { // Если карточка находится в InProgress\n      moveToTodo(card); // Перемещаем её в ToDo\n    } else if (card.parentElement === completedContainer) { // Если карточка находится в Completed\n      moveToInProgress(card); // Перемещаем её в InProgress\n    }\n  }\n});","// Модуль с функциями загрузки и обновления списка задач\n\n// Импортируем сторонние модули\nimport {todoContainer, progressContainer, completedContainer} from './main.js'\nimport {getDate} from './localStorage.js';\nimport {updateDeleteButtonVisibility, addWhiteLine} from './additionalFunctions.js';\n\n// Функция для загрузки задач из localStorage и отображения их на странице\nexport function loadTasks() { \n    const tasks = getDate(); // Получаем текущий список задач из localStorage\n    // Очищаем контейнеры карточек перед добавлением новых\n    todoContainer.innerHTML = '';\n    progressContainer.innerHTML = '';\n    completedContainer.innerHTML = '';\n  \n    tasks.forEach(task => { // Перебираем каждую задачу в списке\n      if (task.status === 'todo') {\n        todoContainer.innerHTML += createCard('todo', task); // Добавляем карточку в контейнер TODO\n      } else if (task.status === 'progress') {\n        progressContainer.innerHTML += createCard('progress', task); // Добавляем карточку в контейнер PROGRESS\n      } else if (task.status === 'completed') {\n        completedContainer.innerHTML += createCard('completed', task);  // Добавляем карточку в контейнер COMPLETED\n      }\n    });\n    updateCounts(); // Обновляем счетчики задач\n    // Обновляем видимость кнопки удаления всех карточек\n    updateDeleteButtonVisibility();\n}\n\n// Функция для обновления счетчиков задач в категориях\nexport function updateCounts() { \n    // Получаем количество всех задач\n    const todoCountLength = todoContainer.children.length;\n    const progressCountLength = progressContainer.children.length;\n    const completedCountLength = completedContainer.children.length;\n    // Получаем текстовые поля счётчиков\n    const todoCount = document.getElementById('todo__count');\n    const progressCount = document.getElementById('progress__count');\n    const completedCount = document.getElementById('completed__count');\n    // Устанавливаем нужные счётчики\n    todoCount.textContent = todoCountLength;\n    progressCount.textContent = progressCountLength;\n    completedCount.textContent = completedCountLength;\n    // Проверяем содержимое контейнера TODO для отрисовки белой линии\n    addWhiteLine()\n}\n\nfunction createCard(status, { id, title, description, time, userName }) { // Функция для создания HTML-кода карточки задачи (используем деструктуризацию)\n  return `\n    <div class=\"card ${status}__card\" data-id=\"${id}\" draggable=\"true\">\n      <div class=\"card__buttons\">\n        ${status === 'todo' ? // Если статус 'todo', добавляем кнопки Edit, Delete, Start \n          `\n            <button class=\"card__edit todo__button\">Edit</button>\n            <button class=\"card__delete todo__button\">Delete</button>\n            <button class=\"card__forward todo__button\">Start</button>\n          ` :\n          status === 'progress' ? // Если статус 'progress', добавляем кнопки Back, Complete \n          `\n            <button class=\"card__back progress__button\">Back</button>\n            <button class=\"card__forward progress__button\">Complete</button>\n          ` :\n          status === 'completed' ? // Если статус 'completed', добавляем кнопки Back, Delete\n          `\n            <button class=\"card__back completed__button\">Back</button>\n            <button class=\"card__delete completed__button\">Delete</button>\n          ` :\n          '' // Если статус не распознан, не добавляем кнопки\n        }\n      </div>\n      <h3 class=\"card__title\">${title}</h3>\n      <p class=\"card__description\">${description}</p>\n      <div class=\"card__bottom\">\n        <p class=\"card__user\">${userName}</p>\n        <p class=\"card__time\">${time}</p>\n      </div>\n    </div>\n  `;\n}","// Модуль с функциями для работы с localStorage\n\n// Функции для работы с localStorage: сохранение и получение данных\nexport function setDate(data) { // Сразу экспортируем функцию\n    localStorage.setItem('tasks', JSON.stringify(data)); // Сохраняем данные в localStorage с ключом 'tasks', предварительно преобразовав их в формат JSON\n}\nexport function getDate() { // Сразу экспортируем функцию\n    return JSON.parse(localStorage.getItem('tasks')); // Получаем данные из localStorage с ключом 'tasks' и преобразуем их из формата JSON в JavaScript-объект\n}","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","// Модуль с дополнительными функциями\n\n// Импортируем сторонние модули\nimport {todoContainer, completedContainer, deleteAll} from './main.js';\n\n// Функция для получения списка пользователей с API \nexport function getUsers () {\n    fetch('https://jsonplaceholder.typicode.com/users') // Отправляем запрос на API для получения списка пользователей\n    .then(response => response.json()) // Преобразуем ответ сервера в JSON формат\n    .then(users => { // Обрабатываем полученный список пользователей\n      const selector = document.querySelector('.modal__selector'); // Находим селектор (список выбора) в DOM по классу 'modal__selector'\n      while (selector.firstChild) { // Удаляем все текущие опции из селектора\n        selector.firstChild.remove();\n      }\n  \n      // Создаем статическую опцию \"Select user\" и добавляем её в селектор\n      const defaultOption = document.createElement('option');\n      defaultOption.value = 0;\n      defaultOption.textContent = 'Select user';\n      selector.appendChild(defaultOption);\n  \n      users.forEach(user => { // Для каждого пользователя создаем новую опцию в селекторе\n        const option = document.createElement('option');\n        option.value = user.id; // Устанавливаем значение опции как id пользователя\n        option.textContent = user.name; // Устанавливаем текст опции как имя пользователя\n        selector.appendChild(option); // Добавляем опцию в селектор\n      });\n    });\n}\n\n// Функция для обновления видимости кнопки \"Удалить все\" в зависимости от наличия завершенных задач\nexport function updateDeleteButtonVisibility() { \n    if (completedContainer.children.length === 0) { // Если в completedContainer нету карточек, скрываем кнопку deleteAll\n      deleteAll.style.display = 'none';\n    } else {\n      deleteAll.style.display = '';\n    }\n}\n\n// Функция для добавления белой линии в пустой контейнер TODO\nexport function addWhiteLine() { \n    if (todoContainer.children.length == 0) { // Проверяем, есть ли карточки в контейнере TODO\n      todoContainer.classList.add(\"white-line\"); // Если карточек нет, добавляем класс 'white-line' к контейнеру\n    } else {\n      todoContainer.classList.remove(\"white-line\"); // Если карточки есть, удаляем класс 'white-line' из контейнера\n    }\n}\n  ","// Модуль с функцией добавления слушателей к объекту window\n\n// Импортируем сторонние модули\nimport {loadTasks} from './loadTasks.js';\nimport {showTime} from './time.js';\n\n // Функция для добавления обработчиков событий к окну (загрузка страницы и изменение localStorage)\nexport function addWindowEventListeners() {\n    window.addEventListener(\"load\", function(){ // Добавляем обработчик события загрузки страницы, который вызывает функцию loadTasks и showtime\n        loadTasks();\n        showTime();\n    });\n    window.addEventListener(\"storage\", function(){ // Добавляем обработчик события на все изменения, для отображения изменений в другой вкладке , который вызывает функцию loadTasks\n        loadTasks();\n    });\n  }","// Модуль с функцией отображения времени\n\n// Функция отображения текущего времени\nexport function showTime () { \n    // Получаем текущую дату и время\n    const date = new Date();\n    // Преобразуем время в строку\n    const timeString = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n    // Помещаем время в элемент с id clock\n    document.getElementById(\"clock\").innerText = timeString;\n    // Запускаем функцию showTime каждую секунду\n    setTimeout(showTime, 1000);\n}","// Модуль с модальными окнами\n\n// Импортируем сторонние модули\nimport {modal, modalTitle, modalDescription, modalUser, todoContainer} from './main.js'\nimport {updateCounts} from './loadTasks.js';\nimport {getDate, setDate} from './localStorage.js';\nimport {getUsers} from './additionalFunctions.js';\n\n// Функция создания модального окна для добавления или редактирования карточки\nexport function createTaskModal () { // Функция создания модального окна для добавления или редактирования карточки\n    const taskModal = document.createElement('div'); // Создаём div для модального окна\n    // Добавляем HTML-структуру модального окна, включая поля ввода, кнопки и селектор\n    taskModal.innerHTML = `<div class=\"modal__content\"> \n    <div class=\"card todo__card modal__card\">\n        <input class=\"modal__title\" placeholder=\"Title\" id=\"modal__title\"></input>\n        <textarea class=\"modal__description\" rows=\"10\" placeholder=\"Description\" id=\"modal__description\"></textarea>\n        <div class=\"modal__bottom\">\n            <select class=\"modal__selector\" name=\"modal__user\" required=\"required\" id=\"modal__user\">\n                <option value=\"0\" selected>Select user</option>\n            </select>\n            <div class=\"card__buttons\">\n                <button class=\"todo__button\" id=\"task__cancel\"\">Cancel</button>\n                <button class=\"todo__button\" id=\"task__confirm\">Confirm</button>\n            </div>\n        </div>\n    </div>\n  </div>`;\n    taskModal.classList.add('modal'); // Добавляем класс 'modal'\n    taskModal.setAttribute('id', 'modal'); // Устанавливаем id 'modal'\n    document.body.prepend(taskModal); // Добавляем модальное окно в начало body\n    getUsers(); // Загружаем список пользователей для селектора\n}\n\n// Функция для обнуления модального окна\nexport function modalReset () {\n    modalTitle.style.border = '1px solid #4e50d3'; // Возвращаем стандартный цвет рамки для названия\n    modalDescription.style.border = '1px solid #4e50d3'; // Возвращаем стандартный цвет рамки для описания\n    modalUser.style.border = '1px solid #4e50d3'; // Возвращаем стандартный цвет рамки для выбора пользователя\n    // Обнуляем все элементы модального окна\n    modalTitle.value = '';\n    modalDescription.value = '';\n    modalUser.value = 0;\n}\n\n// Функция для проверки введённых данных в модальном окне\nexport function validateInput(title, description, user) { \n    if (!title.trim()) { // Проверка названия на наличие непустого значения\n      modalTitle.style.border = '2px solid red'; // Устанавливаем красную рамку для поля ввода названия\n      return false; // Возвращаем false, если название пустое\n    } else {\n      modalTitle.style.border = '1px solid #4e50d3'; // Устанавливаем стандартную рамку, если название не пустое\n    }\n    if (!description.trim()) { // Проверка описания на наличие непустого значения\n      modalDescription.style.border = '2px solid red'; // Устанавливаем красную рамку для поля ввода описания\n      return false; // Возвращаем false, если описание пустое\n    } else {\n      modalDescription.style.border = '1px solid #4e50d3'; // Устанавливаем стандартную рамку, если описание не пустое\n    }\n    if (user == 0) { // Проверка выбора пользователя\n      modalUser.style.border = '2px solid red'; // Устанавливаем красную рамку для селектора пользователя\n      return false; // Возвращаем false, если пользователь не выбран\n    } else {\n      modalUser.style.border = '1px solid #4e50d3'; // Устанавливаем стандартную рамку, если пользователь выбран\n    }\n    return true; // Если все проверки пройдены возвращает true\n}\n\n// Функция для обработки подтверждения в модальном окне (создание или обновление карточки)\nexport function taskModalConfirm (editingCard) {\n    const valueTitle = modalTitle.value; // Получаем значение из поля ввода названия\n    const valueDescription = modalDescription.value; // Получаем значение из поля ввода описания\n    const valueUser = modalUser.value; // Получаем значение из поля выбора пользователя (ID)\n    // Вызов функции проверки на наличие введённых значений\n    if (!validateInput(valueTitle, valueDescription, valueUser)) {\n      return; // Останавливаем выполнение, если проверка не пройдена\n    }\n    const tasks = getDate(); // Получаем текущий список задач из localStorage\n    if (editingCard) { // Проверяем, есть ли карточка в режиме редактирования\n      // Обновляем текстовое содержимое элементов карточки с новыми значениями из модального окна\n      editingCard.querySelector('.card__title').textContent = modalTitle.value;\n      editingCard.querySelector('.card__description').textContent = modalDescription.value;\n      editingCard.querySelector('.card__user').textContent = modalUser.options[modalUser.selectedIndex].text;\n      // Получаем текущий список задач из localStorage\n      const tasks = getDate();\n      // Находим задачу, которую нужно обновить, по id карточки\n      const taskToUpdate = tasks.find(task => task.id === Number(editingCard.dataset.id));\n      if (taskToUpdate) { // Проверяем, нашли ли мы задачу\n        // Обновляем свойства задачи с новыми значениями из модального окна\n        taskToUpdate.title = modalTitle.value;\n        taskToUpdate.description = modalDescription.value;\n        taskToUpdate.userID = modalUser.value;\n        taskToUpdate.userName = modalUser.options[modalUser.selectedIndex].text;\n        setDate(tasks);\n      }\n      // Обновляем ID карточки\n      editingCard.dataset.id = taskToUpdate.id;\n    } else {\n      const date = new Date(); // Получаем текущее время\n      const timeString = date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }); // Преобразуем время в строку\n      const id = Date.now(); // Генерируем уникальный идентификатор для задачи, используя текущее время в миллисекундах\n      const userName = modalUser.options[modalUser.selectedIndex].text; // Забираем имя пользователя\n      // Добавляем новую карточку в контейнер\n      todoContainer.innerHTML += `<div class=\"card todo__card\" data-id=\"${id}\" draggable=\"true\">\n                                    <div class=\"card__buttons\">\n                                      <button class=\"card__edit todo__button\">Edit</button>\n                                      <button class=\"card__delete todo__button\">Delete</button>\n                                      <button class=\"card__forward todo__button\">Start</button>\n                                    </div>\n                                    <h3 class=\"card__title\">${valueTitle}</h3>\n                                    <p class=\"card__description\">${valueDescription}</p>\n                                    <div class=\"card__bottom\">\n                                      <p class=\"card__user\">${userName}</p>\n                                      <p class=\"card__time\">${timeString}</p>\n                                    </div>\n                                  </div>`;\n      tasks.push({ // Добавляем данные новой задачи в массив\n          id: id, // Устанавливаем идентификатор задачи\n          time: timeString, // Устанавливаем время создания задачи\n          title: valueTitle, // Устанавливаем название задачи\n          description: valueDescription, // Устанавливаем описание задачи\n          userID: modalUser.value, // Устанавливаем ответственного за задачу пользователя\n          userName: modalUser.options[modalUser.selectedIndex].text,\n          status: 'todo' // Устанавливаем статус задачи\n      });\n      setDate(tasks); // Сохраняем обновленный список задач в localStorage\n    }\n    // Закрываем модальное окно\n    modal.style.display = \"none\";\n    // Сбрасываем ссылку на редактируемую карточку\n    editingCard = null; \n    // Обнуляем модальное окно\n    modalReset();\n    // Обновляем счётчики\n    updateCounts();\n}\n\n// Функция для создания модального окна подтверждения\nexport function createModal(warningText, cancelFunction, confirmFunction, colorCategory) {\n    // Создаем div-элемент для модального окна\n    const confirmModal = document.createElement('div');\n    // Устанавливаем id и class модального окна для удобства обращения\n    confirmModal.id = 'confirmModal';\n    confirmModal.className = 'modalConfirm';\n    // Устанавливаем HTML-содержимое модального окна\n    confirmModal.innerHTML = `\n      <div class=\"modalConfirm__content\">\n        <div class=\"modalConfirm__container${colorCategory}\">\n          <p class=\"modalConfirm__warning\">${warningText}</p>\n          <div class=\"modalConfirm__bottom\">\n            <button id=\"modalConfirm__cancel\" class=\"modalConfirm__button${colorCategory} cancel\">Cancel</button>\n            <button id=\"modalConfirm__confirm\" class=\"modalConfirm__button${colorCategory}\">Confirm</button>\n          </div>\n        </div>\n      </div>`;\n    // Показываем модальное окно подтверждения\n    confirmModal.style.display = 'block';\n    // Добавляем модальное окно в конец body\n    document.body.appendChild(confirmModal);\n    // Добавляем обработчики событий для кнопок \"Confirm\" и \"Cancel\"\n    document.getElementById('modalConfirm__confirm').addEventListener('click', confirmFunction);\n    document.getElementById('modalConfirm__cancel').addEventListener('click', cancelFunction);\n    // Обработчик события клика для закрытия модального окна при клике вне его области\n    document.addEventListener('click', (event) => {\n      if (event.target == confirmModal) {\n        confirmModal.remove();\n      }\n    })\n  }","// Модуль с функциями для работы Drag&Drop\n\n// Импортируем сторонние модули\nimport {moveToTodo, moveToInProgress, moveToCompleted} from './cardTransfer.js';\n\nlet draggedCardId = null\n// Функции для добавления обработчиков событий на Drag&Drop\nexport function addEventListenerForDragAndDrop() {\n    // Добавляем обработчики событий для drag and drop\n    document.addEventListener('dragstart', (e) => {\n      // Сохраняем id перетаскиваемой карточки\n      draggedCardId = e.target.dataset.id;\n      // Добавляем класс 'dragging' для визуального эффекта\n      e.target.classList.add('dragging');\n    });\n  \n    document.addEventListener('dragover', (e) => { // Обработчик события перетаскивания над элементом\n      // Разрешаем drop, чтобы можно было поместить карточку в это место\n      e.preventDefault();\n    });\n  \n    document.addEventListener('drop', (e) => { // Обработчик события отпускания карточки\n      // Получаем id контейнера, в который была перемещена карточка\n      const dropTargetId = e.target.closest('.card__container').id;\n      // Получаем ссылку на перетаскиваемую карточку по её id\n      const card = document.querySelector(`[data-id=\"${draggedCardId}\"]`);\n  \n      // Проверяем, куда была перемещена карточка, и вызываем соответствующую функцию перемещения\n      if (dropTargetId === 'todo__container' && !card.classList.contains('todo__card')) { // Дополнительно проверяем, чтобы нельзя было поместить карточку в изначальный раздел\n        moveToTodo(card);\n      } else if (dropTargetId === 'progress__container' && !card.classList.contains('progress__card')) {\n        moveToInProgress(card);\n      } else if (dropTargetId === 'completed__container' && !card.classList.contains('completed__card')) {\n        moveToCompleted(card);\n      }\n  \n      // Удаляем класс 'dragging', чтобы вернуть карточке исходный вид\n      card.classList.remove('dragging');\n    });\n  \n    document.addEventListener('dragend', (e) => {\n      // Удаляем класс 'dragging', чтобы вернуть карточке исходный вид\n      e.target.classList.remove('dragging');\n    });\n  }","// Модуль с функциями для перетаскивания карточек между разделами\n\n// Импортируем сторонние модули\nimport {todoContainer, progressContainer, completedContainer} from './main.js'\nimport {updateCounts} from './loadTasks.js';\nimport {getDate, setDate} from './localStorage.js';\nimport {updateDeleteButtonVisibility} from './additionalFunctions.js';\nimport {createModal} from './modal.js';\n\nexport function moveToTodo(card) { // Функция перемещения карточки в ToDo\n    // Получаем ссылки на поля карточки и id\n    const currentTitle = card.getElementsByClassName('card__title')[0].innerHTML;\n    const currentDescription = card.getElementsByClassName('card__description')[0].innerHTML;\n    const currentTime = card.getElementsByClassName('card__time')[0].innerHTML;\n    const currentUser = card.getElementsByClassName('card__user')[0].innerHTML;\n    const id = Number(card.dataset.id);\n    // Создаём такую же карточку в новом разделе\n    todoContainer.innerHTML += `<div class=\"card todo__card\" data-id=\"${id}\" draggable=\"true\">\n                                  <div class=\"card__buttons\">\n                                    <button class=\"card__edit todo__button\">Edit</button>\n                                    <button class=\"card__delete todo__button\">Delete</button>\n                                    <button class=\"card__forward todo__button\">Start</button>\n                                  </div>\n                                  <h3 class=\"card__title\">${currentTitle}</h3>\n                                  <p class=\"card__description\">${currentDescription}</p>\n                                  <div class=\"card__bottom\">\n                                    <p class=\"card__user\">${currentUser}</p>\n                                    <p class=\"card__time\">${currentTime}</p>\n                                  </div>\n                                </div>`;\n    // Удаляем старую карточку\n    card.remove(card);\n    // Получаем текущие задачи из Local Storage\n    const tasks = getDate();\n    // Находим задачу, которую нужно обновить\n    const taskToUpdate = tasks.find(task => task.id === id);\n    // Обновляем поле 'status'\n    taskToUpdate.status = 'todo';\n    // Обновляем Local Storage с новым массивом задач\n    setDate(tasks);\n    // Обновляем счётчики\n    updateCounts();\n    // Обновляем видимость кнопки удаления всех карточек\n    updateDeleteButtonVisibility();\n  };\n  \n  export function moveToInProgress(card) { // Функция перемещения карточки в In Progress\n    const cancelFunction = () => { // Функция для отмены в модальном окне\n      confirmModal.remove(); // Закрываем модальное окно\n    };\n    const confirmFunction = () => { // Функция для подтверждения в модальном окне\n      confirmModal.remove(); // Закрываем модальное окно\n      toProgressWhatever(); // Перемещаем карточку, если подтвердили превышение лимита\n    }\n    if (progressContainer.children.length > 5) { // Если в активных задачах уже 6 задач\n      // Создаем модальное окно с подтверждением\n      createModal('You have accumulated unfulfilled tasks. Are you sure you want to add another task?', cancelFunction, confirmFunction, 'Progress');\n    } else {\n      toProgressWhatever() // Перемещаем карточку если лимита нету\n    }\n    function toProgressWhatever() { // Функция для продолжения перемещения в колонку In Progress\n      // Получаем ссылки на поля карточки и id\n      const currentTitle = card.getElementsByClassName('card__title')[0].innerHTML;\n      const currentDescription = card.getElementsByClassName('card__description')[0].innerHTML;\n      const currentTime = card.getElementsByClassName('card__time')[0].innerHTML;\n      const currentUser = card.getElementsByClassName('card__user')[0].innerHTML;\n      const id = Number(card.dataset.id);\n      // Создаём такую же карточку в новом разделе\n      progressContainer.innerHTML += `<div class=\"card progress__card\" data-id=\"${id}\" draggable=\"true\">\n                                        <div class=\"card__buttons\">\n                                          <button class=\"card__back progress__button\">Back</button>\n                                          <button class=\"card__forward progress__button\">Complete</button>\n                                        </div>\n                                        <h3 class=\"card__title\">${currentTitle}</h3>\n                                        <p class=\"card__description\">${currentDescription}</p>\n                                        <div class=\"card__bottom\">\n                                          <p class=\"card__user\">${currentUser}</p>\n                                          <p class=\"card__time\">${currentTime}</p>\n                                        </div>\n                                      </div>`;\n      // Удаляем старую карточку\n      card.remove(card);\n      // Получаем текущие задачи из Local Storage\n      const tasks = getDate();\n      // Находим задачу, которую нужно обновить\n      const taskToUpdate = tasks.find(task => task.id === id);\n      // Обновляем поле 'status'\n      taskToUpdate.status = 'progress';\n      // Обновляем Local Storage с новым массивом задач\n      setDate(tasks);\n      // Обновляем счётчики\n      updateCounts();\n      // Обновляем видимость кнопки удаления всех карточек\n      updateDeleteButtonVisibility();\n    }\n  }\n  export function moveToCompleted(card) { // Функция перемещения карточки в Completed\n    // Получаем ссылки на поля карточки и id\n    const currentTitle = card.getElementsByClassName('card__title')[0].innerHTML;\n    const currentDescription = card.getElementsByClassName('card__description')[0].innerHTML;\n    const currentTime = card.getElementsByClassName('card__time')[0].innerHTML;\n    const currentUser = card.getElementsByClassName('card__user')[0].innerHTML;\n    const id = Number(card.dataset.id);\n    // Создаём такую же карточку в новом разделе\n    completedContainer.innerHTML += `<div class=\"card completed__card\" data-id=\"${id}\" draggable=\"true\">\n                                      <div class=\"card__buttons\">\n                                        <button class=\"card__back completed__button\">Back</button>\n                                        <button class=\"card__delete completed__button\">Delete</button>\n                                      </div>\n                                      <h3 class=\"card__title\">${currentTitle}</h3>\n                                      <p class=\"card__description\">${currentDescription}</p>\n                                      <div class=\"card__bottom\">\n                                        <p class=\"card__user\">${currentUser}</p>\n                                        <p class=\"card__time\">${currentTime}</p>\n                                      </div>\n                                    </div>`;\n    // Удаляем старую карточку\n    card.remove(card);\n    // Получаем текущие задачи из Local Storage\n    const tasks = getDate();\n    // Находим задачу, которую нужно обновить\n    const taskToUpdate = tasks.find(task => task.id === id);\n    // Обновляем поле 'status'\n    taskToUpdate.status = 'completed';\n    // Обновляем Local Storage с новым массивом задач\n    setDate(tasks);\n    // Обновляем счётчики\n    updateCounts();\n    // Обновляем видимость кнопки удаления всех карточек\n    updateDeleteButtonVisibility();\n  };","// Модуль с функциями для схлопывания кнопок\n\n// Функции для схлопывания кнопок\nexport function hideTodo () {\n  // Получаем элементы, которые нужно скрыть\n  const cardContainer = document.body.getElementsByClassName('card__container')[0];\n  const categoryButton = document.body.getElementsByClassName('category__button')[0];\n  const todo = document.body.querySelector('.todo');\n  // Скрываем или показываем элементы\n  cardContainer.classList.toggle(\"hidden\");\n  categoryButton.classList.toggle(\"hidden\");\n  todo.classList.toggle(\"collapsed\");\n}\nexport function hideProgress () {\n  // Получаем элементы, которые нужно скрыть\n  const cardContainer = document.body.getElementsByClassName('card__container')[1];\n  const progress = document.body.querySelector('.progress');\n  // Скрываем или показываем элементы\n  cardContainer.classList.toggle(\"hidden\");\n  progress.classList.toggle(\"collapsed\");\n}\nexport function hideCompleted () {\n  // Получаем элементы, которые нужно скрыть\n  const cardContainer = document.body.getElementsByClassName('card__container')[2];\n  const categoryButton = document.body.getElementsByClassName('category__button')[1];\n  const completed = document.body.querySelector('.completed');\n  // Скрываем или показываем элементы\n  cardContainer.classList.toggle(\"hidden\");\n  categoryButton.classList.toggle(\"hidden\");\n  completed.classList.toggle(\"collapsed\");\n}","// Модуль с функцией удаления всех завершённых задач\n\n// Импортируем сторонние модули\nimport {completedContainer} from './main.js'\nimport {updateCounts} from './loadTasks.js';\nimport {getDate, setDate} from './localStorage.js';\nimport {updateDeleteButtonVisibility} from './additionalFunctions.js';\nimport {createModal} from './modal.js';\n\n// Функция для удаления всех завершенных задач\nexport function deleteAllCompleted () {\n    createModal(\n      'Are you sure you want to delete all completed tasks?', // Текст предупреждения в модальном окне\n      () => { // Функция, выполняемая при нажатии кнопки \"Cancel\"\n        // Скрываем модальное окно подтверждения без удаления задач\n        confirmModal.remove();\n      },\n      () => { // Функция, выполняемая при нажатии кнопки \"Confirm\"\n        // Получаем текущие задачи из Local Storage\n        const tasks = getDate();\n        // Фильтруем задачи, оставляя только те, у которых статус не 'completed'\n        const updatedTasks = tasks.filter(task => task.status !== 'completed');\n        // Обновляем Local Storage с новым массивом задач (без завершенных)\n        setDate(updatedTasks);\n        // Очищаем содержимое контейнера завершенных задач в DOM\n        completedContainer.innerHTML = '';\n        // Обновляем счетчики задач\n        updateCounts();\n        // Скрываем модальное окно подтверждения\n        confirmModal.remove();\n        // Обновляем видимость кнопки удаления всех карточек\n        updateDeleteButtonVisibility();\n      }, 'Completed' // Цвет категории для оформления модального окна\n    );\n}"],"names":[],"version":3,"file":"index.b8fca702.js.map","sourceRoot":"/__parcel_source_root/"}